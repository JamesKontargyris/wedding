@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

// column mixins
@mixin grid($target, $context){
  width: (($target/$context)*100%);
}

// margin mixins
@mixin mleft($target, $context){
  margin-left: (($target/$context)*100%);
}
@mixin mright($target, $context){
  margin-right: (($target/$context)*100%);
}

// strip units from a value
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

.blue-bg {
  @include background(url('img/card-noise.png') top left repeat, radial-gradient($action-color 0%, darken($action-color,13%) 60%) center no-repeat);
}

.blue-bg-with-pattern {
  background:
          url('img/card-noise.png') top left repeat,
          url('img/page-header-bg.svg') center no-repeat,
          radial-gradient($action-color 0%, darken($action-color,13%) 60%) center no-repeat;
}

.blue-bg-with-garlands {
  background:
        url('img/card-noise.png') top left repeat,
        url('img/garland.svg') center 0 repeat-x,
        url('img/garland_180.svg') center 100% repeat-x,
        radial-gradient($action-color 0%, darken($action-color,13%) 100%) center no-repeat;
  background-size:auto, 60px 40px, 60px 40px, auto;

  @include media(min-width 610px) {
    background:
            url('img/card-noise.png') top left repeat,
            url('img/garland.svg') center 1% repeat-x,
            url('img/garland_180.svg') center 99% repeat-x,
            radial-gradient($action-color 0%, darken($action-color,13%) 100%) center no-repeat;
    background-size:auto, 90px 40px, 90px 40px, auto;
  }
}

